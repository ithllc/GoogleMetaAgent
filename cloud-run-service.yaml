# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: google-meta-agent
  labels:
    cloud.googleapis.com/location: europe-west1
    dev-tutorial: hackathon-nyc-cloud-run-gpu-25
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/ingress-status: all
spec:
  template:
    metadata:
      labels:
        dev-tutorial: hackathon-nyc-cloud-run-gpu-25
      annotations:
        # GPU Configuration - NVIDIA L4 GPU for AI inference
        run.googleapis.com/gpu-type: nvidia-l4
        # Resource allocation for GPU workloads
        run.googleapis.com/cpu-throttling: "false"
        run.googleapis.com/execution-environment: gen2
        # Scaling configuration
        autoscaling.knative.dev/minScale: "0"
        autoscaling.knative.dev/maxScale: "1"
        # Startup and timeout settings for GPU workloads
        run.googleapis.com/timeout: "3600"
        run.googleapis.com/startup-cpu-boost: "true"
    spec:
      containerConcurrency: 1
      timeoutSeconds: 3600
      serviceAccountName: PROJECT_NUMBER-compute@developer.gserviceaccount.com
      containers:
      - name: meta-agent-container
        image: gcr.io/PROJECT_ID/google-meta-agent:latest
        ports:
        - name: http1
          containerPort: 8080
          protocol: TCP
        env:
        - name: PORT
          value: "8080"
        - name: GOOGLE_CLOUD_PROJECT
          value: PROJECT_ID
        - name: GOOGLE_CLOUD_LOCATION
          value: us-central1
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: NVIDIA_VISIBLE_DEVICES
          value: "0"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: PYTHONDONTWRITEBYTECODE
          value: "1"
        resources:
          limits:
            # GPU allocation - 1 NVIDIA L4 GPU
            nvidia.com/gpu: "1"
            # CPU and memory for GPU workloads
            cpu: "8"
            memory: "32Gi"
          requests:
            cpu: "4"
            memory: "16Gi"
        # Startup probe for GPU initialization
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 10
          periodSeconds: 10
          failureThreshold: 10
        # Liveness probe
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 30
          failureThreshold: 3
        # Readiness probe  
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 5
          failureThreshold: 3
  traffic:
  - percent: 100
    latestRevision: true

---
# Cloud Run Service with IAM binding for public access
apiVersion: v1
kind: ConfigMap
metadata:
  name: deployment-config
data:
  # Deployment configuration
  project_id: "PROJECT_ID"
  region: "us-central1"
  service_name: "google-meta-agent"
  image_name: "gcr.io/PROJECT_ID/google-meta-agent:latest"
  
  # gcloud deployment command
  deploy_command: |
    gcloud run deploy google-meta-agent \
      --image gcr.io/PROJECT_ID/google-meta-agent:latest \
      --region us-central1 \
      --platform managed \
      --allow-unauthenticated \
      --memory 32Gi \
      --cpu 8 \
      --gpu 1 \
      --gpu-type nvidia-l4 \
      --concurrency 1 \
      --max-instances 1 \
      --timeout 3600 \
      --no-cpu-throttling \
      --execution-environment gen2 \
      --port 8080 \
      --set-env-vars GOOGLE_CLOUD_PROJECT=PROJECT_ID,GOOGLE_CLOUD_LOCATION=us-central1,CUDA_VISIBLE_DEVICES=0,NVIDIA_VISIBLE_DEVICES=0
